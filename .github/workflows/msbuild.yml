# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "github-actions-1" ]
  pull_request:
    branches: [ "github-actions-1" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  SF_BUILD_CONFIGURATION: Release-Qt
  SF_DBS: "*1_14_70_0.database"
  SSE_DBS: "*1_5_3.database,*1_5_73.database,*1_6_438.database,*1_6_1130.database"
  FO4_DBS: "*1_10_162.database,*1_10_982_3.database"

permissions:
  contents: read

jobs:
  build-sf:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # gets the short sha to append it to the archive name
    - name: Get short SHA
      run: echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.SF_BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Make Bundle Directory
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: New-Item -ItemType Directory -Path "ckpe-starfield-${{env.SHORT_SHA}}"

    - name: Copy Voltek
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path x64\Release\Voltek*.dll "ckpe-starfield-${{env.SHORT_SHA}}"

    - name: Copy Database
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Recurse -Path Database\SF -Include ${{ env.SF_DBS }} | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-starfield-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Copy Dialog
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path Dialogs\SF\*.pak "ckpe-starfield-${{env.SHORT_SHA}}"

    - name: Copy Stuff
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Path .\Stuffs\SF -Recurse | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-starfield-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Copy CKPE
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Path .\x64 -Recurse -Include "ckpe_loader.exe","*.dll" | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-starfield-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ckpe-starfield-${{env.SHORT_SHA}}
        path: "ckpe-starfield-${{env.SHORT_SHA}}"

  build-sse-and-fo4:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # gets the short sha to append it to the archive name
    - name: Get short SHA
      run: echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Make SSE Bundle Directory
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: New-Item -ItemType Directory -Path "ckpe-skyrimse-${{env.SHORT_SHA}}"
    
    - name: Make FO4 Bundle Directory
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: New-Item -ItemType Directory -Path "ckpe-fallout4-${{env.SHORT_SHA}}"

    - name: Copy Voltek to SSE
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path x64\Release\Voltek*.dll "ckpe-skyrimse-${{env.SHORT_SHA}}"

    - name: Copy Voltek to FO4
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path x64\Release\Voltek*.dll "ckpe-fallout4-${{env.SHORT_SHA}}"

    - name: Copy SSE Database
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Recurse -Path Database\SSE -Include ${{ env.SSE_DBS }} | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-skyrimse-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Copy FO4 Database
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Recurse -Path Database\FO4 -Include ${{ env.FO4_DBS }} | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-fallout4-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Copy SSE Dialog
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path Dialogs\SSE\*.pak "ckpe-skyrimse-${{env.SHORT_SHA}}"

    - name: Copy FO4 Dialog
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Copy-Item -Path Dialogs\FO4\*.pak "ckpe-fallout4-${{env.SHORT_SHA}}"

    - name: Copy SSE Stuff
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Path .\Stuffs\SSE -Recurse | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-skyrimse-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Copy FO4 Stuff
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Path .\Stuffs\FO4 -Recurse | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-fallout4-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Copy SSE CKPE
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Path .\x64 -Include "ckpe_loader.exe","*.dll" | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-skyrimse-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Copy FO4 CKPE
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: Get-ChildItem -Path .\x64 -Include "ckpe_loader.exe","*.dll" | ForEach-Object { Copy-Item -Path $_.FullName -Destination (Join-Path "ckpe-fallout4-${{env.SHORT_SHA}}" $_.Name) -Force }

    - name: Upload SSE build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ckpe-skyrimse-${{env.SHORT_SHA}}
        path: "ckpe-skyrimse-${{env.SHORT_SHA}}"
        
    - name: Upload FO4 build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ckpe-fallout4-${{env.SHORT_SHA}}
        path: "ckpe-fallout4-${{env.SHORT_SHA}}"
